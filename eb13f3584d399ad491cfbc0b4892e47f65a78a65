{
  "comments": [
    {
      "key": {
        "uuid": "539853f0_2f9a4a61",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_avl.c",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1016062
      },
      "writtenOn": "2019-02-25T13:57:35Z",
      "side": 1,
      "message": "@Daniel\nThis assert doesn\u0027t seems to be correct for the hardlinks case. In case of multiple dirents pointing to same mdcache_entry and when we are removing a link for v3, we are making the entry unreachable. We will hit this assert than if the dirents are reffed and we are trying to invalidate the parent chunk. mdc_try_get_cached()-\u003emdcache_find_keyed() is handling ENOENT. Can we do something similar here?",
      "revId": "eb13f3584d399ad491cfbc0b4892e47f65a78a65",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f675aa4_9c6f2f9a",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_avl.c",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2019-03-12T14:56:14Z",
      "side": 1,
      "message": "I think you\u0027re right, but this is a big problem.  We have a ref, so that entry can never be freed, but we can\u0027t look up the entry by key, so we can\u0027t get the entry, so we can\u0027t put the ref.  I think we need to leave the assert until we\u0027ve resolved this issue.  We may need a temporary pointer to the entry in the dirent while we have it ref\u0027d...",
      "parentUuid": "539853f0_2f9a4a61",
      "revId": "eb13f3584d399ad491cfbc0b4892e47f65a78a65",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b64ff26_0fa517ef",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_avl.c",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2019-03-12T17:41:19Z",
      "side": 1,
      "message": "That might work. If the dirent is holding a ref, it can also hold a pointer for the lifetime of the ref.\n\nThe DIR_ENTRY_REFFED flag would indicate if the pointer is valid.\n\nOptionally, the pointer could replace the flag.",
      "parentUuid": "7f675aa4_9c6f2f9a",
      "revId": "eb13f3584d399ad491cfbc0b4892e47f65a78a65",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "436e87e3_b968fb62",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_avl.c",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2019-03-12T18:17:59Z",
      "side": 1,
      "message": "Probably right.  I\u0027ll look into this in the next day or so.",
      "parentUuid": "8b64ff26_0fa517ef",
      "revId": "eb13f3584d399ad491cfbc0b4892e47f65a78a65",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6043c7ec_44f5a9cf",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_avl.c",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2019-03-12T14:56:14Z",
      "side": 1,
      "message": "I think a better solution is to just not free ckey here, and let mdcache_avl_remove() put the ref when it\u0027s eventually called (which it will be).",
      "revId": "eb13f3584d399ad491cfbc0b4892e47f65a78a65",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0d45b1a_59380c35",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_avl.c",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2019-03-12T17:41:19Z",
      "side": 1,
      "message": "Yea, that might work. We just need to make sure the right thing happens if a LOOKUP finds the key?",
      "parentUuid": "6043c7ec_44f5a9cf",
      "revId": "eb13f3584d399ad491cfbc0b4892e47f65a78a65",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c6a54c9_fae68934",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_avl.c",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2019-03-12T18:17:59Z",
      "side": 1,
      "message": "Deleting the key is unrelated to whether or not lookup finds it, that depends on whether it\u0027s in the tree.",
      "parentUuid": "d0d45b1a_59380c35",
      "revId": "eb13f3584d399ad491cfbc0b4892e47f65a78a65",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}