{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1c7d77e7_b87669fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1008938
      },
      "writtenOn": "2024-09-12T02:40:58Z",
      "side": 1,
      "message": "Work on the warning, and my comment",
      "revId": "0af2bafeb3d45a496a6b2f7d4b7c0b29687d2781",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "baa4e44b_f2ed84ae",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1021665
      },
      "writtenOn": "2024-09-12T03:48:27Z",
      "side": 1,
      "message": "There was a work being done in the past for the similar issue...are we discarding that or we can incorporate that too here?\n\nAs per the results, that also was giving lesser time...\nhttps://review.gerrithub.io/c/ffilz/nfs-ganesha/+/1183423",
      "revId": "0af2bafeb3d45a496a6b2f7d4b7c0b29687d2781",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0d763be_cb5807af",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1038288
      },
      "writtenOn": "2024-09-12T06:37:37Z",
      "side": 1,
      "message": "Previously string comparison operation was reduced to hash comparison which gave good result in terms of time of parsing. But, parser was maintaining a table of unique tokens in a linked list, and every time a new token was being found there was a lookup being done in the linked list which was O(n) lookup. If the token was found in the list a char* being returned otherwise new token was being added to the linked list.\nHere, I have change this token table from a linkedlist to an avl tree. Now, the lookup can be done in O(logn).\nThe previous change was giving time around 120s for 20,000 export blocks. But, if you increase the number of client blocks in each export blocks by a factor of 2. This time of parsing will grow up to 500s. Because the parsing is being done in O(n^2).\nBut, this change has brought down the parsing time to O(nlogn).\nNow, even with 1,00,000 exports we can get parsing done in 2-3s.",
      "parentUuid": "baa4e44b_f2ed84ae",
      "revId": "0af2bafeb3d45a496a6b2f7d4b7c0b29687d2781",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef4614eb_31ad2ea9",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1021665
      },
      "writtenOn": "2024-09-12T06:46:16Z",
      "side": 1,
      "message": "Thanks for the update...\nAre the comparison still based on String or moved to hash based?\n\nLet\u0027s plan to abandon the old CR...",
      "parentUuid": "d0d763be_cb5807af",
      "revId": "0af2bafeb3d45a496a6b2f7d4b7c0b29687d2781",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52c14919_b157895c",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1008938
      },
      "writtenOn": "2024-09-12T02:40:58Z",
      "side": 1,
      "message": "Name \"avl_token\" is misleading, instead have name like \"token_tree\", which will indicate that, this will hold all the tokens.",
      "revId": "0af2bafeb3d45a496a6b2f7d4b7c0b29687d2781",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fc1bd06_f694575b",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2024-09-11T17:06:15Z",
      "side": 1,
      "message": "WARNING: Missing a blank line after declarations\n+\tstruct avltree_node *node;\n+\tnode \u003d avltree_inline_lookup(key, \u0026avl_token, token_cmpf_hash);",
      "revId": "0af2bafeb3d45a496a6b2f7d4b7c0b29687d2781",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}