{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5754f35e_48e55a5f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2021-05-24T17:29:11Z",
      "side": 1,
      "message": "This actually looks simpler.  Have you tested with various compile options?  I\u0027m interested in NFSv3/NLM on/off and 9P on/off.",
      "revId": "1e5449d2e917e5fc8424876887dd26871a5dcd05",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "147e6366_ac42bbb0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017949
      },
      "writtenOn": "2021-05-24T19:17:58Z",
      "side": 1,
      "message": "Tried with 9P off, it compiles and runtime seems ok. Type string has one boolean less as expected.\nI did not manage to compile with -DUSE_NFS3\u003dOFF -DUSE_NLM\u003dOFF, got errors in nfs_rpc_dispatcher_thread.c and other parts not related to export_show_exports. How do I build without v3/NLM?",
      "parentUuid": "5754f35e_48e55a5f",
      "revId": "1e5449d2e917e5fc8424876887dd26871a5dcd05",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "169a06ff_36777d1c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1018367
      },
      "writtenOn": "2021-05-25T04:06:54Z",
      "side": 1,
      "message": "That make it really simple!  Thanks for fixing.\nSome minor options as below.",
      "revId": "1e5449d2e917e5fc8424876887dd26871a5dcd05",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5be3472_0e82c60c",
        "filename": "src/support/export_mgr.c",
        "patchSetId": 1
      },
      "lineNbr": 1609,
      "author": {
        "id": 1018367
      },
      "writtenOn": "2021-05-25T04:06:54Z",
      "side": 1,
      "message": "Could we make all type as definitions? That would make more convenient and clear.\nLike `q` means TYPE_EXPORT_ID, `s` means TYPE_PATH, `bbb` means STAT_TYPE_NFSV4, `(tt)` means TYPE_TIMESTAMP?",
      "revId": "1e5449d2e917e5fc8424876887dd26871a5dcd05",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f09b9da7_f3cb36f7",
        "filename": "src/support/export_mgr.c",
        "patchSetId": 1
      },
      "lineNbr": 1609,
      "author": {
        "id": 1017949
      },
      "writtenOn": "2021-05-25T07:30:43Z",
      "side": 1,
      "message": "Yes, that would be desirable. But as for the \"qs\" and \"(tt)\" patterns have several other occurrences, this should be done in a more general and consistent way, which is well beyond the scope of this patch. Before addressing this we may even want to discuss how to make the dbus API more stable across different sets of compile time options.",
      "parentUuid": "c5be3472_0e82c60c",
      "revId": "1e5449d2e917e5fc8424876887dd26871a5dcd05",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfa3c711_19060233",
        "filename": "src/support/export_mgr.c",
        "patchSetId": 1
      },
      "lineNbr": 1609,
      "author": {
        "id": 1018367
      },
      "writtenOn": "2021-05-25T13:39:48Z",
      "side": 1,
      "message": "agree. thanks for explaining.",
      "parentUuid": "f09b9da7_f3cb36f7",
      "revId": "1e5449d2e917e5fc8424876887dd26871a5dcd05",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}