{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "28300157_bf380ac9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2021-06-02T14:51:10Z",
      "side": 1,
      "message": "WARNING: Possible unwrapped commit description (prefer a maximum 75 chars per line)\nOperation   Max(MiB)   Min(MiB)  Mean(MiB)     StdDev    Mean(s) Test# #Tasks tPN reps fPP reord reordoff reordrand seed segcnt blksiz xsize aggsize API RefNum",
      "revId": "912dd19648cd0c189a00ce074aa41b0ff2379a4e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfead483_aed46d9e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-05-29T01:00:54Z",
      "side": 1,
      "message": "Abandonned as discussed on IRC\nHere\u0027s some text for punch list; just ripping off the commit message basically\n\n----------------\n# Investigate KCM (Kernel Connexion Multiplexer)\n\nKCM is a framework that lets the application specify how messages are constructed in a BPF program, so that the kernel can split messages at proper length for us.\n\nThe main advantage of this is that it saves us one user-space \u003c-\u003e kernel round-trip of read(hdr) then read(rest-of-the-size), as a single recvmsg() will always give us a full message: less syscalls \u003d better performance\n\n9P poc: https://review.gerrithub.io/c/ffilz/nfs-ganesha/+/421314\n----------------",
      "revId": "912dd19648cd0c189a00ce074aa41b0ff2379a4e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6e72970_de2b27b0",
        "filename": "src/MainNFSD/9p_dispatcher.c",
        "patchSetId": 3
      },
      "lineNbr": 553,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2021-06-02T14:51:10Z",
      "side": 1,
      "message": "WARNING: Avoid line continuations in quoted strings\n+\tstatic const char *bpf_prog_string \u003d \"             \\",
      "revId": "912dd19648cd0c189a00ce074aa41b0ff2379a4e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd1cea77_bfec737c",
        "filename": "src/MainNFSD/9p_dispatcher.c",
        "patchSetId": 3
      },
      "lineNbr": 569,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2021-06-02T14:51:10Z",
      "side": 1,
      "message": "WARNING: line over 80 characters\n+\t\t\t\t\t    bpf_function_start(mod, \"p9_msg_size\"),",
      "revId": "912dd19648cd0c189a00ce074aa41b0ff2379a4e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93913c57_b3d53683",
        "filename": "src/MainNFSD/9p_dispatcher.c",
        "patchSetId": 3
      },
      "lineNbr": 570,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2021-06-02T14:51:10Z",
      "side": 1,
      "message": "WARNING: line over 80 characters\n+\t\t\t\t\t    bpf_function_size(mod, \"p9_msg_size\"),",
      "revId": "912dd19648cd0c189a00ce074aa41b0ff2379a4e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe691bfc_475cf608",
        "filename": "src/MainNFSD/9p_dispatcher.c",
        "patchSetId": 3
      },
      "lineNbr": 575,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2021-06-02T14:51:10Z",
      "side": 1,
      "message": "WARNING: line over 80 characters\n+\t\t\tLogCrit(COMPONENT_9P, \"Could not load bpf program: %s\", bpf_debug);",
      "revId": "912dd19648cd0c189a00ce074aa41b0ff2379a4e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}