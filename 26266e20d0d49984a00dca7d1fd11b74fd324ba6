{
  "comments": [
    {
      "key": {
        "uuid": "746f9488_6e33dbc0",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_lru.c",
        "patchSetId": 3
      },
      "lineNbr": 1647,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2020-05-28T13:23:28Z",
      "side": 1,
      "message": "This should probably be static.",
      "revId": "26266e20d0d49984a00dca7d1fd11b74fd324ba6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2af39763_0f3843dc",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_lru.c",
        "patchSetId": 3
      },
      "lineNbr": 1680,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2020-05-28T13:23:28Z",
      "side": 1,
      "message": "The LRU doesn\u0027t have a \"head\" or a \"tail\", it has an MRU and an LRU end.  Please try to use MRU and LRU rather than \"head\" or \"tail\", to avoid confusion.",
      "revId": "26266e20d0d49984a00dca7d1fd11b74fd324ba6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cd8b6cb_91b65e54",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_lru.c",
        "patchSetId": 3
      },
      "lineNbr": 1694,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2020-05-28T15:35:25Z",
      "side": 1,
      "message": "Hmm, there should be a space between if and (",
      "revId": "26266e20d0d49984a00dca7d1fd11b74fd324ba6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1733116_b7f983f6",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_lru.c",
        "patchSetId": 3
      },
      "lineNbr": 1698,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2020-05-28T15:35:25Z",
      "side": 1,
      "message": "Note that an inode\u0027s \"first_export_id\" is not necessarily the export that has the inode as a root.\n\nIf you have two exports:\n\n/export/fs1 (NFS v3 and NFS v4)\nand\n/export/fs1/some/path/fs2 (NFS v4 only)\n\nand the v4 export was added dynamically\n\nAn NFS v3 client could have caused /export/fs1/some/path/fs2 to be in the mdcache before the export was added, and thus first_export_id is NOT the new export and the inode doesn\u0027t appear to be a root inode",
      "revId": "26266e20d0d49984a00dca7d1fd11b74fd324ba6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77743b26_f087a484",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_lru.c",
        "patchSetId": 3
      },
      "lineNbr": 1700,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2020-05-28T15:35:25Z",
      "side": 1,
      "message": "I know some folks like this convention as it makes it harder for a typo to accidentally result in an assignment instead of a comparison but I find it clunky to read.\n\nAlso, PseudoFS is not guaranteed to be export_id 0, if you define an explicit PseudoFS export, it can have any export_id you like.",
      "revId": "26266e20d0d49984a00dca7d1fd11b74fd324ba6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f851193c_10d15637",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_lru.c",
        "patchSetId": 3
      },
      "lineNbr": 1700,
      "author": {
        "id": 1016888
      },
      "writtenOn": "2020-05-29T01:57:39Z",
      "side": 1,
      "message": "This is really different from my understanding. Do you have any good suggestions and methods for me to identify PseudoFS root object? Thank you very much.",
      "parentUuid": "77743b26_f087a484",
      "revId": "26266e20d0d49984a00dca7d1fd11b74fd324ba6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1e40e54_3ee4f501",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_lru.c",
        "patchSetId": 3
      },
      "lineNbr": 1704,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2020-05-28T15:35:25Z",
      "side": 1,
      "message": "You\u0027re leaking an export reference.",
      "revId": "26266e20d0d49984a00dca7d1fd11b74fd324ba6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1132c188_d000e0ba",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_lru.c",
        "patchSetId": 3
      },
      "lineNbr": 1704,
      "author": {
        "id": 1016888
      },
      "writtenOn": "2020-05-29T01:57:39Z",
      "side": 1,
      "message": "Yes, that was an oversight. Thanks a lot.",
      "parentUuid": "c1e40e54_3ee4f501",
      "revId": "26266e20d0d49984a00dca7d1fd11b74fd324ba6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b7b2e47_768dcb08",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_lru.c",
        "patchSetId": 3
      },
      "lineNbr": 1706,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2020-05-28T13:23:28Z",
      "side": 1,
      "message": "You don\u0027t need to get the inode of the sub_handle, and that might not even be right, if there\u0027s another stacked FSAL.  You can check this:\n\n(export-\u003eexp_root_obj \u003d\u003d \u0026entry-\u003eobj_handle)",
      "revId": "26266e20d0d49984a00dca7d1fd11b74fd324ba6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}