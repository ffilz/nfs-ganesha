{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1bedb1c0_fd27f728",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1020351
      },
      "writtenOn": "2022-07-18T07:16:42Z",
      "side": 1,
      "message": "Cool",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57d778cf_5602d523",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2022-07-18T13:31:05Z",
      "side": 1,
      "message": "I admit, I don\u0027t know much about Prometheus or Graphana, so just a few nits here, while I digest things.",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cddaa1dc_ca0df790",
        "filename": "src/monitoring/monitoring.cc",
        "patchSetId": 10
      },
      "lineNbr": 278,
      "author": {
        "id": 1020351
      },
      "writtenOn": "2022-07-18T07:16:42Z",
      "side": 1,
      "message": "This goes over all clients - the loop\u0027s cost will only go up with time. If you use an LRU you can iterate just the active clients, and stop on the first inactive one.\nYou can also prune based on that",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf0f28fd_f8f562d5",
        "filename": "src/monitoring/monitoring.cc",
        "patchSetId": 10
      },
      "lineNbr": 278,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2022-07-18T13:31:05Z",
      "side": 1,
      "message": "True, but you trade off activity in this isolated thread for activity in the hot-path of operations, so maybe this is a good solution after all?",
      "parentUuid": "cddaa1dc_ca0df790",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35da1b51_aba3f0d6",
        "filename": "src/monitoring/monitoring.cc",
        "patchSetId": 10
      },
      "lineNbr": 278,
      "author": {
        "id": 1020351
      },
      "writtenOn": "2022-07-18T13:36:20Z",
      "side": 1,
      "message": "That\u0027s a good point. Still, clientActivity does need to be pruned, no?\n\nActually, if you just prune here based on durationSeconds you get the same behavior as with LRU - the loop\u0027s cost will be roughly the number of active clients in a set amount of time (the prune threshold + the thread\u0027s timer)",
      "parentUuid": "bf0f28fd_f8f562d5",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b1b891a_30985eec",
        "filename": "src/monitoring/monitoring.cc",
        "patchSetId": 10
      },
      "lineNbr": 278,
      "author": {
        "id": 1015854
      },
      "writtenOn": "2022-07-20T05:32:21Z",
      "side": 1,
      "message": "I removed monitoring of client activity. Let\u0027s add that as a separate change and focus on all the other plumbing.",
      "parentUuid": "35da1b51_aba3f0d6",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a36fde5_429a6b9f",
        "filename": "src/monitoring/monitoring.cc",
        "patchSetId": 10
      },
      "lineNbr": 303,
      "author": {
        "id": 1020351
      },
      "writtenOn": "2022-07-18T07:16:42Z",
      "side": 1,
      "message": "The comment in monitoring_register_export_label() seems to imply we\u0027re never allowed to free the memory pointed to by exportLabels entries (\"... as the label is returned as a char* to C code\")",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99cade4e_8d16b9de",
        "filename": "src/monitoring/monitoring.cc",
        "patchSetId": 10
      },
      "lineNbr": 303,
      "author": {
        "id": 1015854
      },
      "writtenOn": "2022-07-20T05:32:21Z",
      "side": 1,
      "message": "Great catch. The export label isn\u0027t returned as char* to C code anymore. I changed GetExportLabel() to return a string copy, so that the entry in exportLabels can be updated.",
      "parentUuid": "3a36fde5_429a6b9f",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e7d9389_918d2d0a",
        "filename": "src/monitoring/monitoring.cc",
        "patchSetId": 10
      },
      "lineNbr": 319,
      "author": {
        "id": 1020351
      },
      "writtenOn": "2022-07-18T07:16:42Z",
      "side": 1,
      "message": "Calling GetExportLabel() but the result is ignored if export_id\u003d\u003d0",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f33aabff_0afc93b3",
        "filename": "src/monitoring/monitoring.cc",
        "patchSetId": 10
      },
      "lineNbr": 319,
      "author": {
        "id": 1015854
      },
      "writtenOn": "2022-07-20T05:32:21Z",
      "side": 1,
      "message": "Moved it further down.",
      "parentUuid": "9e7d9389_918d2d0a",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26a3d3dd_ebd3368b",
        "filename": "src/monitoring/monitoring.cc",
        "patchSetId": 10
      },
      "lineNbr": 422,
      "author": {
        "id": 1020351
      },
      "writtenOn": "2022-07-18T07:16:42Z",
      "side": 1,
      "message": "Ditto (ignored if export_id\u003d\u003d0)",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24e88774_37b01e42",
        "filename": "src/monitoring/monitoring.cc",
        "patchSetId": 10
      },
      "lineNbr": 422,
      "author": {
        "id": 1015854
      },
      "writtenOn": "2022-07-20T05:32:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26a3d3dd_ebd3368b",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "198e5bc0_c6cdfe9b",
        "filename": "src/monitoring/monitoring.cc",
        "patchSetId": 10
      },
      "lineNbr": 476,
      "author": {
        "id": 1020351
      },
      "writtenOn": "2022-07-18T07:16:42Z",
      "side": 1,
      "message": "Ditto (can do like monitoring_mdcache_cache_miss() below and inline the variable)",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a66cccc_96d32ed9",
        "filename": "src/monitoring/monitoring.cc",
        "patchSetId": 10
      },
      "lineNbr": 476,
      "author": {
        "id": 1015854
      },
      "writtenOn": "2022-07-20T05:32:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "198e5bc0_c6cdfe9b",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb9e2190_7b9af7ac",
        "filename": "src/monitoring/monitoring_internal.h",
        "patchSetId": 10
      },
      "lineNbr": 44,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2022-07-18T04:05:12Z",
      "side": 1,
      "message": "ERROR: spaces required around that \u0027\u003c\u0027 (ctx:VxV)\n+extern std::unique_ptr\u003cprometheus::Exposer\u003e exposer;\n                       ^",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0283dfbf_3b8b4519",
        "filename": "src/monitoring/monitoring_internal.h",
        "patchSetId": 10
      },
      "lineNbr": 44,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2022-07-18T04:05:12Z",
      "side": 1,
      "message": "ERROR: spaces required around that \u0027\u003e\u0027 (ctx:VxW)\n+extern std::unique_ptr\u003cprometheus::Exposer\u003e exposer;\n                                           ^",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f39ec852_e0d4bd03",
        "filename": "src/monitoring/monitoring_internal.h",
        "patchSetId": 10
      },
      "lineNbr": 45,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2022-07-18T04:05:12Z",
      "side": 1,
      "message": "ERROR: spaces required around that \u0027\u003c\u0027 (ctx:VxV)\n+extern std::shared_ptr\u003cprometheus::Registry\u003e registry;\n                       ^",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad2261ad_41307111",
        "filename": "src/monitoring/monitoring_internal.h",
        "patchSetId": 10
      },
      "lineNbr": 45,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2022-07-18T04:05:12Z",
      "side": 1,
      "message": "ERROR: spaces required around that \u0027\u003e\u0027 (ctx:VxW)\n+extern std::shared_ptr\u003cprometheus::Registry\u003e registry;\n                                            ^",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1569864b_248b2845",
        "filename": "src/monitoring/monitoring_internal.h",
        "patchSetId": 10
      },
      "lineNbr": 47,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2022-07-18T04:05:12Z",
      "side": 1,
      "message": "ERROR: need consistent spacing around \u0027\u0026\u0027 (ctx:WxV)\n+const std::string \u0026GetExportLabel(export_id_t export_id);\n                   ^",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e23c822e_806499ba",
        "filename": "src/support/fridgethr.c",
        "patchSetId": 10
      },
      "lineNbr": 1447,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2022-07-18T13:31:05Z",
      "side": 1,
      "message": "I think there may be a problem with these.  There appears to be a single instance of max and min in the monitoring code, but there are may thread fridges, so this will get called for each one.  It seems that the last-one-in will overwrite the others?",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3d11f69_98b7a7e0",
        "filename": "src/support/fridgethr.c",
        "patchSetId": 10
      },
      "lineNbr": 1447,
      "author": {
        "id": 1015854
      },
      "writtenOn": "2022-07-20T05:32:21Z",
      "side": 1,
      "message": "Yes, only the last one counts. But this function is only called from 9p_dispatcher.c (line 453) so it looks like there\u0027s only one thread pool created.",
      "parentUuid": "e23c822e_806499ba",
      "revId": "908418a35c5d216faffa9a18d9b6c453080ed05c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}