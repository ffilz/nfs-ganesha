{
  "comments": [
    {
      "key": {
        "uuid": "969f8b49_6c4a5ee4",
        "filename": "src/Protocols/NLM/nlm_async.c",
        "patchSetId": 1
      },
      "lineNbr": 271,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2019-06-27T18:18:26Z",
      "side": 1,
      "message": "This should be retval \u003d RPC_SUCCESS;",
      "revId": "18bc67177018cf81e6a84205482eb072328a1be5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d42634a_600b1fe7",
        "filename": "src/Protocols/NLM/nlm_async.c",
        "patchSetId": 1
      },
      "lineNbr": 275,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2019-06-27T18:18:26Z",
      "side": 1,
      "message": "And here we should set:\nretval \u003d cc-\u003ecc_error.re_status;\n\nI think with those two changes, retval becomes always initialized",
      "revId": "18bc67177018cf81e6a84205482eb072328a1be5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "669362d1_efa49a28",
        "filename": "src/Protocols/NLM/nlm_async.c",
        "patchSetId": 1
      },
      "lineNbr": 294,
      "author": {
        "id": 1004389
      },
      "writtenOn": "2019-06-24T13:31:13Z",
      "side": 1,
      "message": "I\u0027m inclined to think it should just return -1 here?",
      "revId": "18bc67177018cf81e6a84205482eb072328a1be5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bda34c36_d9802f0f",
        "filename": "src/Protocols/NLM/nlm_async.c",
        "patchSetId": 1
      },
      "lineNbr": 294,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2019-06-24T16:00:41Z",
      "side": 1,
      "message": "RPC_* codes are positive.  Probably RPC_TIMEDOUT.",
      "parentUuid": "669362d1_efa49a28",
      "revId": "18bc67177018cf81e6a84205482eb072328a1be5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbfc8847_a3073940",
        "filename": "src/Protocols/NLM/nlm_async.c",
        "patchSetId": 1
      },
      "lineNbr": 294,
      "author": {
        "id": 1004389
      },
      "writtenOn": "2019-06-24T16:22:38Z",
      "side": 1,
      "message": "Every return here in nlm_send_async() is either \u0027return -1;\u0027 or \u0027return retval;\u0027\n\nAre they all wrong? Or should cc-\u003ecc_error.re_status be set to something, e.g. RPC_TIMEDOUT, before this return?",
      "parentUuid": "bda34c36_d9802f0f",
      "revId": "18bc67177018cf81e6a84205482eb072328a1be5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c236cc27_67ea4352",
        "filename": "src/Protocols/NLM/nlm_async.c",
        "patchSetId": 1
      },
      "lineNbr": 294,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2019-06-24T17:04:03Z",
      "side": 1,
      "message": "Hmmm... The only caller that actually checks the result is nlm4_send_grant_msg(), and it seems to believe the result will be a RPC_* value.  I don\u0027t have a strong opinion, since is only checks for 0 \u003d\u003d success.  -1 should be fine.",
      "parentUuid": "fbfc8847_a3073940",
      "revId": "18bc67177018cf81e6a84205482eb072328a1be5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0976dbc_904efa38",
        "filename": "src/Protocols/NLM/nlm_async.c",
        "patchSetId": 1
      },
      "lineNbr": 294,
      "author": {
        "id": 1004389
      },
      "writtenOn": "2019-06-24T18:14:01Z",
      "side": 1,
      "message": "nlm4_send_grant_mesg() is only checking for RPC_SUCCESS (i.e. 0). Seems a little bit strange to have used RPC_SUCCESS there.\n\nSo it just called LogMajor (between LogCrit and LogFatal in severity?) but then return SUCCESS anyway?  Maybe it\u0027s not really a LogMajor severity after all?  Maybe it\u0027s only worthy of a LogWarn, LogEvent or LogInfo instead?",
      "parentUuid": "c236cc27_67ea4352",
      "revId": "18bc67177018cf81e6a84205482eb072328a1be5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}