{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "065fac31_c2ffafd0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-02-06T22:32:43Z",
      "side": 1,
      "message": "This looks good as long as we don\u0027t ever find ourselves in a position of incrementing refcount from 0 to 1. I just want to make sure we can\u0027t do that.",
      "revId": "c01f36d6c3ab47c8406f3c23d3e2e1325421cb38",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ee7be5a_9924157b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1014452
      },
      "writtenOn": "2024-02-13T20:37:11Z",
      "side": 1,
      "message": "Thanks, Frank - Can you help me understand the concerns of incrementing from 0 to 1?",
      "parentUuid": "065fac31_c2ffafd0",
      "revId": "c01f36d6c3ab47c8406f3c23d3e2e1325421cb38",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "479fa664_e229165e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-02-20T22:56:05Z",
      "side": 1,
      "message": "Increment from 0 to 1 can race with a thread that is trying to free an unused state",
      "parentUuid": "9ee7be5a_9924157b",
      "revId": "c01f36d6c3ab47c8406f3c23d3e2e1325421cb38",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8bc0894_4e325588",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1014452
      },
      "writtenOn": "2024-02-21T04:02:32Z",
      "side": 1,
      "message": "Ah ok. Just to clarify, are you talking about nfs4_State_Del, where the state is removed from the hashtable itself? or something else? \n\nIf nfs4_State_Del, my understanding is that operation will be protected by hashtable writer lock, which would have to wait behind the hashtable reader lock after this change.",
      "parentUuid": "479fa664_e229165e",
      "revId": "c01f36d6c3ab47c8406f3c23d3e2e1325421cb38",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9729ec0c_8d31979e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-02-27T18:03:48Z",
      "side": 1,
      "message": "Matt and Daniel - I\u0027d really like both of you to review this.",
      "revId": "c01f36d6c3ab47c8406f3c23d3e2e1325421cb38",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da0e6f26_b11f6da7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1004075
      },
      "writtenOn": "2024-02-27T21:47:22Z",
      "side": 1,
      "message": "it seems cogent to me",
      "revId": "c01f36d6c3ab47c8406f3c23d3e2e1325421cb38",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}