{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9f2535f1_bae352c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-03-01T19:00:43Z",
      "side": 1,
      "message": "Hmm, I didn\u0027t realize we have multiple list implementations... Most of our code uses glist, though we do have one TAILQ in the Ganesha code. I wonder how much we want to encourage multiple list implementations...\n\nAlso, is this default going to be high enough that a legacy config will work reasonably well?",
      "revId": "3173a8c3d553223ab487564cb23094bfc96f791a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f96b21e5_4ca4de5b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1021521
      },
      "writtenOn": "2024-03-19T15:52:24Z",
      "side": 1,
      "message": "I found the TAILQ abstraction pretty useful.\n\nWe had no limit on the number of cache entries earlier. This newly added default limit seems like a reasonable number to me.",
      "parentUuid": "9f2535f1_bae352c6",
      "revId": "3173a8c3d553223ab487564cb23094bfc96f791a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1ba4f67_418ac2f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-03-20T15:46:46Z",
      "side": 1,
      "message": "Does TAILQ do anything glist doesn\u0027t do? They look pretty similar. I get that we already have some TAILQ in Ganesha (and a LIST also)",
      "parentUuid": "f96b21e5_4ca4de5b",
      "revId": "3173a8c3d553223ab487564cb23094bfc96f791a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f01f7fdb_0ae8537d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1021521
      },
      "writtenOn": "2024-03-22T14:53:25Z",
      "side": 1,
      "message": "There is a slight difference in implementation in terms of what is stored the previous pointer of a node (I think that Linux also uses the TAILQ based implementation). However, that doesn\u0027t much affect the usage of either data structure.\n\nThen there is also a single-linked version of the TAILQ, which could be useful in some situations.\n\nBut as you said, within Ganesha we use both TAILQ and glist.",
      "parentUuid": "a1ba4f67_418ac2f2",
      "revId": "3173a8c3d553223ab487564cb23094bfc96f791a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79c6169e_219aacde",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-03-23T22:33:04Z",
      "side": 1,
      "message": "True, but most of the code uses glist, and we have just a few instances of TAILQ. I\u0027d rather consolidate on the most used solution, but I guess if I\u0027m the only one who feels strongly.\n\nThe question is do we have a mix, or switch entirely to either glist or TAILQ?",
      "parentUuid": "f01f7fdb_0ae8537d",
      "revId": "3173a8c3d553223ab487564cb23094bfc96f791a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}