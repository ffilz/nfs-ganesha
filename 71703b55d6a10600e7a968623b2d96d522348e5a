{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "eb1acaef_4772ade7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-09-16T17:18:23Z",
      "side": 1,
      "message": "Code changes are all find, continuing discussion of the compile flag changes and when to make them.",
      "revId": "71703b55d6a10600e7a968623b2d96d522348e5a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdc41ea0_dfa9e7af",
        "filename": "src/CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 239,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2024-09-16T14:38:05Z",
      "side": 1,
      "message": "We use maintainer mode for this.  See src/cmake/maintainer_mode.cmake  Most of these are already turned on there.",
      "revId": "71703b55d6a10600e7a968623b2d96d522348e5a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "618abce8_1d361e26",
        "filename": "src/CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 239,
      "author": {
        "id": 1020258
      },
      "writtenOn": "2024-09-16T14:48:10Z",
      "side": 1,
      "message": "Thanks for the feedback! I understand the use of maintainer mode, but I was thinking it might be beneficial to enable these flags (and potentially more) for all builds once the current issues are resolved. This could help catch more issues earlier and improve code quality across the board, even in standard compilations. What do you think?\nWe do it in our builds as we build normally when we build manually or in the CI pipeline (we want to keep on the same compilation process)",
      "parentUuid": "cdc41ea0_dfa9e7af",
      "revId": "71703b55d6a10600e7a968623b2d96d522348e5a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1218c05_8c215e53",
        "filename": "src/CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 239,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2024-09-16T17:01:13Z",
      "side": 1,
      "message": "I\u0027m definitely against having -Werror in the release version of the code.  I used to be a Gentoo maintainer, and upstream packages that had -Werror on by default were a huge problem, because it meant we had to patch it out of the build.  There are too many different systems with too many different versions of compilers for this to be feasible.  Once you turn off -Werror, it\u0027s debatable whether or not the other flags are useful.  I don\u0027t have a strong opinion on that.",
      "parentUuid": "618abce8_1d361e26",
      "revId": "71703b55d6a10600e7a968623b2d96d522348e5a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "873ca0f8_49709ae6",
        "filename": "src/CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 239,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-09-16T17:18:23Z",
      "side": 1,
      "message": "Let\u0027s turn any of these we don\u0027t have in maintainer mode on (we need to make sure that has ALL the warnings we expect to be handled).\n\nI\u0027ll defer to Kaleb on what to enable for production builds, he\u0027s the one who does all the packaging.",
      "parentUuid": "e1218c05_8c215e53",
      "revId": "71703b55d6a10600e7a968623b2d96d522348e5a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a028dc1_fbd55935",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_avl.c",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2024-09-16T11:40:44Z",
      "side": 1,
      "message": "ERROR: space prohibited after that \u0027*\u0027 (ctx:WxW)\n+\tstruct avltree_node __attribute__((unused)) * node;\n \t                                            ^",
      "revId": "71703b55d6a10600e7a968623b2d96d522348e5a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48ef41fe_7c9d4094",
        "filename": "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/mdcache_avl.c",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-09-16T17:18:23Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "3a028dc1_fbd55935",
      "revId": "71703b55d6a10600e7a968623b2d96d522348e5a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}