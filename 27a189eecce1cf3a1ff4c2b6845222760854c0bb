{
  "comments": [
    {
      "key": {
        "uuid": "baa041b7_0f29d13a",
        "filename": "src/FSAL/default_methods.c",
        "patchSetId": 3
      },
      "lineNbr": 244,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2016-10-28T13:53:11Z",
      "side": 1,
      "message": "This appears to be unused.",
      "revId": "27a189eecce1cf3a1ff4c2b6845222760854c0bb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_9a799d33",
        "filename": "src/FSAL/default_methods.c",
        "patchSetId": 3
      },
      "lineNbr": 244,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2016-10-28T16:26:46Z",
      "side": 1,
      "message": "It will be used in a next iteration that has FSAL_VFS use O_TMPFILE. We may also want to implement unnamed files in Gluster and Ceph to support this (unless it is easier to implement full atomic create and setattrs).",
      "parentUuid": "baa041b7_0f29d13a",
      "revId": "27a189eecce1cf3a1ff4c2b6845222760854c0bb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_4f00f9ab",
        "filename": "src/FSAL/default_methods.c",
        "patchSetId": 3
      },
      "lineNbr": 249,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2016-10-28T13:53:11Z",
      "side": 1,
      "message": "Why create_not_atomic and create_atomic?  Aren\u0027t they just opposites?",
      "revId": "27a189eecce1cf3a1ff4c2b6845222760854c0bb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_7a76d940",
        "filename": "src/FSAL/default_methods.c",
        "patchSetId": 3
      },
      "lineNbr": 249,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2016-10-28T16:26:46Z",
      "side": 1,
      "message": "Yes, they are opposite, but there\u0027s the intermediate state, so it isn\u0027t a boolean...",
      "parentUuid": "baa041b7_4f00f9ab",
      "revId": "27a189eecce1cf3a1ff4c2b6845222760854c0bb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_2feb75de",
        "filename": "src/FSAL/fsal_helper.c",
        "patchSetId": 3
      },
      "lineNbr": 446,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2016-10-28T13:53:11Z",
      "side": 1,
      "message": "Why is this an error?",
      "revId": "27a189eecce1cf3a1ff4c2b6845222760854c0bb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_5a73154f",
        "filename": "src/FSAL/fsal_helper.c",
        "patchSetId": 3
      },
      "lineNbr": 446,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2016-10-28T16:26:46Z",
      "side": 1,
      "message": "Because this function never gets called with FSAL_NO_CREATE, but we want to list all the enum values rather than have a default case (so if a new one is added, compile fails), plus, the default case would have to do some \"I should never get here\" code also...",
      "parentUuid": "baa041b7_2feb75de",
      "revId": "27a189eecce1cf3a1ff4c2b6845222760854c0bb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_ccc76545",
        "filename": "src/FSAL/fsal_helper.c",
        "patchSetId": 3
      },
      "lineNbr": 446,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2016-11-02T10:12:30Z",
      "side": 1,
      "message": "Might want to change the message here to something people who will eventually get it someday can understand.",
      "parentUuid": "baa041b7_5a73154f",
      "revId": "27a189eecce1cf3a1ff4c2b6845222760854c0bb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_cf952933",
        "filename": "src/FSAL/fsal_helper.c",
        "patchSetId": 3
      },
      "lineNbr": 549,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2016-10-28T13:53:11Z",
      "side": 1,
      "message": "Couldn\u0027t tmpname be unset here, if create_unnamed?",
      "revId": "27a189eecce1cf3a1ff4c2b6845222760854c0bb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_3a705140",
        "filename": "src/FSAL/fsal_helper.c",
        "patchSetId": 3
      },
      "lineNbr": 549,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2016-10-28T16:26:46Z",
      "side": 1,
      "message": "tmpname isn\u0027t used for create_unnamed",
      "parentUuid": "baa041b7_cf952933",
      "revId": "27a189eecce1cf3a1ff4c2b6845222760854c0bb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_acc42141",
        "filename": "src/FSAL/fsal_helper.c",
        "patchSetId": 3
      },
      "lineNbr": 567,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2016-11-02T10:12:30Z",
      "side": 1,
      "message": "(nitpick) its",
      "revId": "27a189eecce1cf3a1ff4c2b6845222760854c0bb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}