{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0236dcd7_40022446",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2023-01-06T17:51:51Z",
      "side": 1,
      "message": "See this alternative patch:\n\nhttps://review.gerrithub.io/c/ffilz/nfs-ganesha/+/548179",
      "revId": "b2af4d6d5394a95cde656fd778744128dc299711",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e66662b7_2de2870f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2023-01-12T00:01:30Z",
      "side": 1,
      "message": "Can we abandon this now in favor of the different solution?",
      "revId": "b2af4d6d5394a95cde656fd778744128dc299711",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90f8fdfe_e5ff8b4c",
        "filename": "src/FSAL/FSAL_GPFS/export.c",
        "patchSetId": 1
      },
      "lineNbr": 536,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2023-01-05T14:58:46Z",
      "side": 1,
      "message": "I don\u0027t think this should make a difference.  All this will do is set fs-\u003eprivate_data, which is already set (or we wouldn\u0027t be here).  It it\u0027s set to something else, then this will overwrite it an leak.",
      "revId": "b2af4d6d5394a95cde656fd778744128dc299711",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "905430da_d9ba07c8",
        "filename": "src/FSAL/FSAL_GPFS/export.c",
        "patchSetId": 1
      },
      "lineNbr": 536,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2023-01-05T17:57:44Z",
      "side": 1,
      "message": "And actually this could be bad if private_data was something other than gpfs_fs.",
      "parentUuid": "90f8fdfe_e5ff8b4c",
      "revId": "b2af4d6d5394a95cde656fd778744128dc299711",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9da1d1c3_fdcef02f",
        "filename": "src/FSAL/FSAL_GPFS/export.c",
        "patchSetId": 1
      },
      "lineNbr": 536,
      "author": {
        "id": 1017959
      },
      "writtenOn": "2023-01-05T19:08:31Z",
      "side": 1,
      "message": "private_data argument introduced in 4.x and process_claim (localfs.c) assigns private_data  back to this-\u003eprivate_data \n\nthis-\u003eprivate_data \u003d private_data; \n\nWith current code, private_data points valid data only for 1st export creation.\n2nd export onwards it will not be initialized since fs-\u003eprivate_data is not null.\n\nAnother alternative to this fix is removal of private_data argument in claim_filesystem_cb and retain old implementation where this-\u003eprivate_data is assigned with gpfs_fs for first time.\n\nfs-\u003eprivate_data \u003d gpfs_fs; in gpfs_claim_filesystem",
      "parentUuid": "905430da_d9ba07c8",
      "revId": "b2af4d6d5394a95cde656fd778744128dc299711",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13229b10_a8cf6793",
        "filename": "src/FSAL/FSAL_GPFS/export.c",
        "patchSetId": 1
      },
      "lineNbr": 536,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2023-01-06T17:19:47Z",
      "side": 1,
      "message": "OK, sorry, reading more carefully this is the correct fix. It is necessary since otherwise process_claim would change private_data to garbage.\n\nIf claimfs() is called with private_data not being NULL, the fs MUST belong to this FSAL (GPFS in this case) and thus the existing private_data MUST be correct, so returning it in the private_data parameter is correct.\n\nActually there is some other intricacies...\n\nWhen claimfs() is called, the fs may still be claimed by another FSAL in which case private_data might not be NULL but also belongs to the other FSAL. That is why process_claim is setting the private_data much later, so it doesn\u0027t overwrite too early.\n\nI think I need to have process_claim set private_data to NULL unless the fs already belongs to this FSAL. The claimfs() implementations would then look at the passed in private_data, NOT fs-\u003eprivate_data.\n\nLet me post a replacement patch.",
      "parentUuid": "9da1d1c3_fdcef02f",
      "revId": "b2af4d6d5394a95cde656fd778744128dc299711",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ],
  "submitRequirementResults": []
}