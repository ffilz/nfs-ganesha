{
  "comments": [
    {
      "key": {
        "uuid": "26c67bed_4dcf137c",
        "filename": "src/MainNFSD/nfs_rpc_dispatcher_thread.c",
        "patchSetId": 2
      },
      "lineNbr": 1230,
      "author": {
        "id": 1004075
      },
      "writtenOn": "2017-12-11T08:32:00Z",
      "side": 1,
      "message": "I\u0027m not clear why renaming this function is required",
      "revId": "aa84ffc36ea09516899edcbf4dccbd3c1ab43e81",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "741c96f8_5cc111a2",
        "filename": "src/MainNFSD/nfs_rpc_dispatcher_thread.c",
        "patchSetId": 2
      },
      "lineNbr": 1230,
      "author": {
        "id": 1013053
      },
      "writtenOn": "2018-03-09T16:32:43Z",
      "side": 1,
      "message": "I added functions which will exactly do as the name suggests. Put will return it back to the cache and not unref while ref_drc/unref_drc will increment/decrement the ref.",
      "parentUuid": "26c67bed_4dcf137c",
      "revId": "aa84ffc36ea09516899edcbf4dccbd3c1ab43e81",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edfb8661_09b8dcd5",
        "filename": "src/MainNFSD/nfs_rpc_dispatcher_thread.c",
        "patchSetId": 2
      },
      "lineNbr": 1230,
      "author": {
        "id": 1004075
      },
      "writtenOn": "2018-03-09T16:41:30Z",
      "side": 1,
      "message": "get/put are commonly used for ref/unref or ref/rele, those other terms would have been fine from the beginning, but I don\u0027t want to change the meaning of these now;  Use a different notation for putting a DRC on a queue",
      "parentUuid": "741c96f8_5cc111a2",
      "revId": "aa84ffc36ea09516899edcbf4dccbd3c1ab43e81",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fec0a57_f1abef5a",
        "filename": "src/MainNFSD/nfs_rpc_dispatcher_thread.c",
        "patchSetId": 2
      },
      "lineNbr": 1230,
      "author": {
        "id": 1013053
      },
      "writtenOn": "2018-03-09T17:48:10Z",
      "side": 1,
      "message": "I can rename nfs_dupreq_put_drc to nfs_dupreq_recycle_drc.",
      "parentUuid": "edfb8661_09b8dcd5",
      "revId": "aa84ffc36ea09516899edcbf4dccbd3c1ab43e81",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e04ef61a_61bc0f95",
        "filename": "src/RPCAL/nfs_dupreq.c",
        "patchSetId": 2
      },
      "lineNbr": 492,
      "author": {
        "id": 1004075
      },
      "writtenOn": "2017-12-11T08:32:00Z",
      "side": 1,
      "message": "why would we have a routine called \"put\" that assumes refcnt is 0?",
      "revId": "aa84ffc36ea09516899edcbf4dccbd3c1ab43e81",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3407cfcb_e4d1ac53",
        "filename": "src/RPCAL/nfs_dupreq.c",
        "patchSetId": 2
      },
      "lineNbr": 492,
      "author": {
        "id": 1013053
      },
      "writtenOn": "2018-03-09T16:32:43Z",
      "side": 1,
      "message": "I wanted put to blindly return the object back to the cache (which means the object refcnt should be 0).",
      "parentUuid": "e04ef61a_61bc0f95",
      "revId": "aa84ffc36ea09516899edcbf4dccbd3c1ab43e81",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a04b2d6a_6071fa30",
        "filename": "src/RPCAL/nfs_dupreq.c",
        "patchSetId": 2
      },
      "lineNbr": 806,
      "author": {
        "id": 1004075
      },
      "writtenOn": "2017-12-11T08:32:00Z",
      "side": 1,
      "message": "huh?",
      "revId": "aa84ffc36ea09516899edcbf4dccbd3c1ab43e81",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a8657fa_2f210223",
        "filename": "src/RPCAL/nfs_dupreq.c",
        "patchSetId": 2
      },
      "lineNbr": 806,
      "author": {
        "id": 1013053
      },
      "writtenOn": "2018-03-09T16:32:43Z",
      "side": 1,
      "message": "Because put will only be called on the object when the refcnt reaches 0.",
      "parentUuid": "a04b2d6a_6071fa30",
      "revId": "aa84ffc36ea09516899edcbf4dccbd3c1ab43e81",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0c8799a_bd4da4ce",
        "filename": "src/RPCAL/nfs_dupreq.c",
        "patchSetId": 2
      },
      "lineNbr": 806,
      "author": {
        "id": 1004075
      },
      "writtenOn": "2018-03-09T16:41:30Z",
      "side": 1,
      "message": "All refcounting in nfs-ganesha and ntirpc today have (or think they have) an invariant that objects that are reachable must have a refcnt of at least 1 (sometimes I called that the sentinel refcnt).  I believed that the recycle drc logic maintained this, but if not, I\u0027d like us to fix the refcnting to be at least 1 whenever a DRC object is reachable, with the corollary that when the refcnt on an object reaches one after previously being greater than 1, it can and should be really freed.",
      "parentUuid": "0a8657fa_2f210223",
      "revId": "aa84ffc36ea09516899edcbf4dccbd3c1ab43e81",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a417fb84_b574e8f8",
        "filename": "src/RPCAL/nfs_dupreq.c",
        "patchSetId": 2
      },
      "lineNbr": 806,
      "author": {
        "id": 1013053
      },
      "writtenOn": "2018-03-09T17:48:10Z",
      "side": 1,
      "message": "drc_free_expired is freeing drcs only if the refcnt \u003d 0. I can initialize it to 3 if you would want to keep it consistent throughout.",
      "parentUuid": "d0c8799a_bd4da4ce",
      "revId": "aa84ffc36ea09516899edcbf4dccbd3c1ab43e81",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19e3ca0f_993dbf0f",
        "filename": "src/RPCAL/nfs_dupreq.c",
        "patchSetId": 2
      },
      "lineNbr": 1096,
      "author": {
        "id": 1004075
      },
      "writtenOn": "2017-12-11T08:32:00Z",
      "side": 1,
      "message": "again here, \"put\" matches \"get\" and returns a reference;  I don\u0027t favor just renaming things--I\u0027m also worried the new semantics are problematic",
      "revId": "aa84ffc36ea09516899edcbf4dccbd3c1ab43e81",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "940591b4_0779070f",
        "filename": "src/RPCAL/nfs_dupreq.c",
        "patchSetId": 2
      },
      "lineNbr": 1096,
      "author": {
        "id": 1013053
      },
      "writtenOn": "2018-03-09T16:32:43Z",
      "side": 1,
      "message": "We do not want to release the drc back to the cache here but just unref it. I made the intention explicit. Sorry, if that\u0027s confusing.",
      "parentUuid": "19e3ca0f_993dbf0f",
      "revId": "aa84ffc36ea09516899edcbf4dccbd3c1ab43e81",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1d19ec7_623380a2",
        "filename": "src/RPCAL/nfs_dupreq.c",
        "patchSetId": 2
      },
      "lineNbr": 1096,
      "author": {
        "id": 1004075
      },
      "writtenOn": "2018-03-09T16:41:30Z",
      "side": 1,
      "message": "ok, but see my more detailed comment on nomenclature of put and get in this module",
      "parentUuid": "940591b4_0779070f",
      "revId": "aa84ffc36ea09516899edcbf4dccbd3c1ab43e81",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "395d3966_fc2f35ab",
        "filename": "src/RPCAL/nfs_dupreq.c",
        "patchSetId": 2
      },
      "lineNbr": 1425,
      "author": {
        "id": 1004075
      },
      "writtenOn": "2017-12-11T08:32:00Z",
      "side": 1,
      "message": "why is this better open coded?",
      "revId": "aa84ffc36ea09516899edcbf4dccbd3c1ab43e81",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e65ad0_e2fddfc1",
        "filename": "src/RPCAL/nfs_dupreq.c",
        "patchSetId": 2
      },
      "lineNbr": 1425,
      "author": {
        "id": 1013053
      },
      "writtenOn": "2018-03-09T16:32:43Z",
      "side": 1,
      "message": "Earlier the refcnt of the dupreq wasn\u0027t protected. Now, with this change the refcnt of the dupreq will always be protected with the tree lock. Here, as part of rele we want to decrement the refcnt but not release the object back to the cache.",
      "parentUuid": "395d3966_fc2f35ab",
      "revId": "aa84ffc36ea09516899edcbf4dccbd3c1ab43e81",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2592eacc_34d8eaea",
        "filename": "src/RPCAL/nfs_dupreq.c",
        "patchSetId": 2
      },
      "lineNbr": 1425,
      "author": {
        "id": 1004075
      },
      "writtenOn": "2018-03-09T16:41:30Z",
      "side": 1,
      "message": "as long as that\u0027s consistent (and I think that is intended, after much older changes by Malahal), that\u0027s fine",
      "parentUuid": "c5e65ad0_e2fddfc1",
      "revId": "aa84ffc36ea09516899edcbf4dccbd3c1ab43e81",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}