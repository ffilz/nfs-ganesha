{
  "comments": [
    {
      "key": {
        "uuid": "837f3b6d_09fdd265",
        "filename": "src/support/uid2grp.c",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1003947
      },
      "writtenOn": "2020-10-23T18:34:45Z",
      "side": 1,
      "message": "The realloc is usually a no-op in the old code, but we most likely free some memory with this approach here. group list is usually cached (by sssd/winbind), so calling it twice to get the number of entries should be pretty quick unless you have an env where there is no cache of these.\n\nAt least that was the reason for doing this way in the first place. malloc() is not cheap!",
      "revId": "cf35cf9a700f605678d67d1d3f6b1c225cfa5155",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78573e7d_987c7856",
        "filename": "src/support/uid2grp.c",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1018453
      },
      "writtenOn": "2020-10-23T19:15:21Z",
      "side": 1,
      "message": "This is an environment with nslcd talking to ldap proxy. nslcd doesn\u0027t cache group list and with the slowness of ldap proxy server, getgrouplist calls seemed really expensive. Hence took this route to reduce the number of calls to getgrouplist with the assumption that realloc would be cheaper than RPCs to NSS modules.\nOut of curiosity, even when the backend module serves group list from cache, it still would involve communication between two different processes, no? Shouldn\u0027t realloc be faster?",
      "parentUuid": "837f3b6d_09fdd265",
      "revId": "cf35cf9a700f605678d67d1d3f6b1c225cfa5155",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68c8e5b7_9a396b4e",
        "filename": "src/support/uid2grp.c",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1003947
      },
      "writtenOn": "2020-10-28T03:54:52Z",
      "side": 1,
      "message": "realloc() should be faster provided cache is not maintained by glibc itself. I am skeptical of malloc subsystem itself where we have seen a 4GB memory use by ganesha actually eneded up with with 60-70GB of actuall RSS against ganesha process. We are fine with this change though.",
      "parentUuid": "78573e7d_987c7856",
      "revId": "cf35cf9a700f605678d67d1d3f6b1c225cfa5155",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}