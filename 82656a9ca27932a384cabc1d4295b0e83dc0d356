{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "331c8772_a062ad71",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2024-06-12T12:32:06Z",
      "side": 1,
      "message": "WARNING: Possible unwrapped commit description (prefer a maximum 75 chars per line)\nWhen the client deletes a file, the server successfully removes it，if the client does not receive the response due to the server restart，",
      "revId": "82656a9ca27932a384cabc1d4295b0e83dc0d356",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0f39e7f_c0804d67",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-06-12T15:15:16Z",
      "side": 1,
      "message": "What is driving the need for this patch? NFS servers have long returned NOENT and clients are just expected to deal with it. The Kernel NFS server does not translate ENOENT to a non-error (and it does a lookup also).",
      "revId": "82656a9ca27932a384cabc1d4295b0e83dc0d356",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b926ed6_861d9332",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1021774
      },
      "writtenOn": "2024-06-12T15:49:52Z",
      "side": 1,
      "message": "This change feels wrong to me. If the file was not there to begin with, you would expect to receive NOENT. With this change you would get OK.",
      "parentUuid": "a0f39e7f_c0804d67",
      "revId": "82656a9ca27932a384cabc1d4295b0e83dc0d356",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0db7b15_554162bf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-06-12T16:00:57Z",
      "side": 1,
      "message": "Right. So the question is always, do we err in favor of the proper response when the file wasn\u0027t there in the first place, or err in favor of the proper response when a replay occurred (this can also happen if a replay is not caught by duplicate request cache)? The more likely scenario is that the file wasn\u0027t there in the first place and the REMOVE is not a replay.",
      "parentUuid": "1b926ed6_861d9332",
      "revId": "82656a9ca27932a384cabc1d4295b0e83dc0d356",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}