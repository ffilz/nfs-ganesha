{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "941622a9_ac4742a0",
        "filename": "src/scripts/podman/ganesha-container",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-08-12T16:27:50Z",
      "side": 1,
      "message": "Hmm, should we invoke ShellCheck on shell scripts as a commit hook? Or add it to the CI (alongside checkpatch and/or clang)?",
      "revId": "35dc6324e0e2fc1949840a0de38093b28bd190db",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c62e2a9_88067d6a",
        "filename": "src/scripts/podman/ganesha-container",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1020068
      },
      "writtenOn": "2024-08-13T08:37:31Z",
      "side": 1,
      "message": "Could add it to the commit hook?  Separate task?",
      "parentUuid": "941622a9_ac4742a0",
      "revId": "35dc6324e0e2fc1949840a0de38093b28bd190db",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5210c0f_8feafb39",
        "filename": "src/scripts/podman/ganesha-container",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-08-13T22:27:55Z",
      "side": 1,
      "message": "Hmm, that might be more work... I checked a couple of my scripts with shellcheck and they had errors...",
      "parentUuid": "3c62e2a9_88067d6a",
      "revId": "35dc6324e0e2fc1949840a0de38093b28bd190db",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7890688_bf68dc1e",
        "filename": "src/scripts/podman/ganesha-container",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2024-08-12T14:21:04Z",
      "side": 1,
      "message": "\"--\" has a specific meaning, namely that the command should stop processing options.  How about using something like \"any\" instead?  (I\u0027d prefer \"all\" but that\u0027s already used, so we can\u0027t use that)",
      "revId": "35dc6324e0e2fc1949840a0de38093b28bd190db",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7136fa32_df525ac4",
        "filename": "src/scripts/podman/ganesha-container",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1020068
      },
      "writtenOn": "2024-08-13T08:37:31Z",
      "side": 1,
      "message": "\u003e \"--\" has a specific meaning, namely that the command should stop processing options.  How about using something like \"any\" instead?  (I\u0027d prefer \"all\" but that\u0027s already used, so we can\u0027t use that)\n\nUsing `any` or `default` for the version seems clunky, when all you want is the default version.\n\nI\u0027m really using it to mark the end of the script args, marking the command as the next thing to come.  Can I get away with that if I can find a better way of saying it in the usage message?  ðŸ˜Š \n\n\nI could change the usage message to:\n```\nusage: $0 { \u003cdistro\u003e [ \u003cversion\u003e ] | all | delete-all } [ -- ] [ \u003ccmd\u003e... ]\n```\nThe script will definitely shift away `--` from before the command.  It is just a little less clear that if you omit `version` then you have to use `--`.  All that said, only developers are likely to use this for their own testing, and they\u0027ll learn after the first time it gets confused.  I could add note to the usage message saying:\n```\nIf \u003cversion\u003e is omitted and \u003ccmd\u003e is specified then -- must be used before \u003ccmd\u003e.\n```",
      "parentUuid": "c7890688_bf68dc1e",
      "revId": "35dc6324e0e2fc1949840a0de38093b28bd190db",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}