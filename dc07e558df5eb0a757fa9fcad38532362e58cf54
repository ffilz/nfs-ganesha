{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "897a713b_1e100d9c",
        "filename": "src/SAL/nfs4_lease.c",
        "patchSetId": 9
      },
      "lineNbr": 186,
      "author": {
        "id": 1021499
      },
      "writtenOn": "2024-08-12T09:39:19Z",
      "side": 1,
      "message": "@itsmerojin@gmail.com, @ffilzlnx@mindspring.com, Let\u0027s say 5 threads are working on this function, which means the so_refcount increases to 6 before reaching this line. Therefore, reducing the refcount by 1 will not free the state_owner structure, and setting state_owner to NULL will potentially cause a memory leak and leave a stale entry in ht_owner. Am I missing something here?",
      "range": {
        "startLine": 186,
        "startChar": 0,
        "endLine": 186,
        "endChar": 34
      },
      "revId": "dc07e558df5eb0a757fa9fcad38532362e58cf54",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7542e25a_621b066e",
        "filename": "src/SAL/nfs4_lease.c",
        "patchSetId": 9
      },
      "lineNbr": 186,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-08-12T15:00:26Z",
      "side": 1,
      "message": "When we hit this condition, the lease is expired, but this owner reference prevents nfs4_clientid_expire from proceeding. The caller has taken the ref, and passed this owner in. By setting to NULL, we signal the caller that the reference has already been released. If you look at the callers that pass in st_owner, you will see that this is clean.",
      "parentUuid": "897a713b_1e100d9c",
      "range": {
        "startLine": 186,
        "startChar": 0,
        "endLine": 186,
        "endChar": 34
      },
      "revId": "dc07e558df5eb0a757fa9fcad38532362e58cf54",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "122789d7_958a7b49",
        "filename": "src/SAL/nfs4_lease.c",
        "patchSetId": 9
      },
      "lineNbr": 186,
      "author": {
        "id": 1021665
      },
      "writtenOn": "2024-08-13T04:27:23Z",
      "side": 1,
      "message": "Yes, Like Frank mentioned...this is safe enough...and handles the infinite loop seen, due to an extra ref taken...\nThis is reducing the ref of the state owner, if passed by the caller and setting to NULL, to notify that the pointer is valid no more",
      "parentUuid": "7542e25a_621b066e",
      "range": {
        "startLine": 186,
        "startChar": 0,
        "endLine": 186,
        "endChar": 34
      },
      "revId": "dc07e558df5eb0a757fa9fcad38532362e58cf54",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}