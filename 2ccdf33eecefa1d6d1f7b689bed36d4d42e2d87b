{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5bd0dc53_c2d6fb17",
        "filename": "src/idmapper/idmapper_cache.c",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2024-03-01T18:08:11Z",
      "side": 1,
      "message": "I wonder if this should fall back on the old config if the new config isn\u0027t set?",
      "revId": "2ccdf33eecefa1d6d1f7b689bed36d4d42e2d87b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0b84103_5d9f3f54",
        "filename": "src/idmapper/idmapper_cache.c",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-03-01T18:55:06Z",
      "side": 1,
      "message": "Yes, I would really like to see old configs be viable, if with a warning.\n\nI think it might be worth adding an ability to flag that a specific config block was actually present to make it easier to gather options from old blocks. We can make the old parameters note if they were explicitly configured so that we can throw a warning if the old param is set and the new block is present. At least for one release I want to allow both so my testing and CI for example, can share a single config file that will work with old and new code.",
      "parentUuid": "5bd0dc53_c2d6fb17",
      "revId": "2ccdf33eecefa1d6d1f7b689bed36d4d42e2d87b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e71eed27_39b101e2",
        "filename": "src/idmapper/idmapper_cache.c",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1021521
      },
      "writtenOn": "2024-03-19T15:19:45Z",
      "side": 1,
      "message": "Due to the default values for the configs, detecting the absence of new config is not feasible, to be able to fallback to the older config.\n\nThere are two options that I see:\n\n1. Set the default value of older configs to nulls (and similar). Fail bootup if user provides older configs (regardless of the new config being provided), with an explicit error message to migrate to the new config section.\n\n2. Set the default value of new configs to nulls (and similar). Use the new configs if user provides them, else fallback to the older configs. At a later point when the older configs are removed, the default values of the new configs can be added.\n\nWhile it seems that option 2 would solve your requirement, but it could confuse  the users if they supply both configs. Also, adding a warning to the users in such a case would require adding default values to the older configs as well, to first detect if they actually supplied the config.\n\nIMO, the first option is cleaner, although with some inconvenience to the users.\n\nWDYT?",
      "parentUuid": "a0b84103_5d9f3f54",
      "revId": "2ccdf33eecefa1d6d1f7b689bed36d4d42e2d87b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56a2edf1_df37b136",
        "filename": "src/idmapper/idmapper_cache.c",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-03-19T17:05:18Z",
      "side": 1,
      "message": "There\u0027s a config item flag, CONFIG_MARK_SET that can be checked if a config item is set.  That would allow checking if the legacy option was set. We would need to add a new macro CONF_ITEM_STR_SET to be used with the legacy option. If that is set, and the new block is processed, we can throw a warning.\n\nHmm, but we also need a way of setting if a config block has been explicitly set. For some blocks like exports, we only go through the commit if the block is present, but for top level blocks, we always commit.\n\nI can add some stuff to config, maybe next week, to make this easier.\n\nI really don\u0027t want to break existing configurations for the V6 release as we get this stuff migrated.",
      "parentUuid": "e71eed27_39b101e2",
      "revId": "2ccdf33eecefa1d6d1f7b689bed36d4d42e2d87b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}