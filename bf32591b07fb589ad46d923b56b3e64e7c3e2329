{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "51fe8ffc_8693054e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1020068
      },
      "writtenOn": "2022-08-05T03:08:09Z",
      "side": 1,
      "message": "\u003e Patch Set 1:\n\u003e \n\u003e https://jenkins-nfs-ganesha.apps.ocp.ci.centos.org//job/nfs_ganesha_posix_compliance/115/console : FAILED\n\nI assume I can ignore the POSIX compliance failures, since the code change is meant to be a no-op in export validation, so should have no effect on I/O.",
      "revId": "bf32591b07fb589ad46d923b56b3e64e7c3e2329",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2017b01b_8be1518a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1004087
      },
      "writtenOn": "2022-08-05T13:37:53Z",
      "side": 1,
      "message": "Hmm.  I read \"check_foo()\" as returning true if \"foo\".  So this should return true if \"export_duplicate\", ",
      "revId": "bf32591b07fb589ad46d923b56b3e64e7c3e2329",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f661d349_253a6580",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2022-08-05T16:46:57Z",
      "side": 1,
      "message": "Hmm, good point.\n\nAnd I dislike having a boolean function where you always want to negate it when testing. It\u0027s too easy to miss a ! in the code and misunderstand the sense of the test.",
      "parentUuid": "2017b01b_8be1518a",
      "revId": "bf32591b07fb589ad46d923b56b3e64e7c3e2329",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a193c0b6_29d8299d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2022-08-05T16:46:57Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "51fe8ffc_8693054e",
      "revId": "bf32591b07fb589ad46d923b56b3e64e7c3e2329",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "550770a1_63d6edf5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1020068
      },
      "writtenOn": "2022-08-06T00:40:27Z",
      "side": 1,
      "message": "Hard to tell if we are saying the same thing here.  :-)\n\nThere are 2 \"functions\" involved here:\n\n* The block check() function-pointer/method.  I think this should return true if checking the block succeeds.  That\u0027s not the case in the current code: it succeeds if the block fails the check.\n* check_export_duplicate() implementation for export blocks.  This returns true if the block is a duplicate, so the naming is good.  However, it doesn\u0027t check that the block is OK, it does the opposite.  Hence, the rename.",
      "parentUuid": "f661d349_253a6580",
      "revId": "bf32591b07fb589ad46d923b56b3e64e7c3e2329",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcf10adc_5b428b7c",
        "filename": "src/config_parsing/config_parsing.c",
        "patchSetId": 1
      },
      "lineNbr": 1409,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2022-08-05T16:46:57Z",
      "side": 1,
      "message": "Sometimes I wish the logical inverse was \"not\" rather than \"!\" for easier reading... It\u0027s easy to miss the !\n\nWhat it we renamed it from check to check_fail?",
      "revId": "bf32591b07fb589ad46d923b56b3e64e7c3e2329",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "188cb639_cb2a55d5",
        "filename": "src/config_parsing/config_parsing.c",
        "patchSetId": 1
      },
      "lineNbr": 1409,
      "author": {
        "id": 1020068
      },
      "writtenOn": "2022-09-19T09:55:48Z",
      "side": 1,
      "message": "\u003e Sometimes I wish the logical inverse was \"not\" rather than \"!\" for easier reading... It\u0027s easy to miss the !\n\u003e \n\u003e What it we renamed it from check to check_fail?\n\nSorry, I missed this reply...\n\nI think the intent of check() is noble, so the name is good.  That is, I don\u0027t like check_fail()...  :-)\n\nAlthough the \u0027!\u0027 gets a bit hidden, that\u0027s a line of code that isn\u0027t going to be read often.\n\nOne alternative that could make the code clearer is to have typedef for the different config_block member functions.  Then this code could read:\n\n  config_block_check_fn check;\n  ...\n  check \u003d item-\u003eu.blk.check;\n  if (check \u0026\u0026 !check(param_struct, err_type) {\n    goto err_out;\n  }\n\nThat is much more readable and the ! has little chance of getting lost in the noise.\n\nAlternatively, could rename check() to is_invalid().  I think that would make sense...",
      "parentUuid": "dcf10adc_5b428b7c",
      "revId": "bf32591b07fb589ad46d923b56b3e64e7c3e2329",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}