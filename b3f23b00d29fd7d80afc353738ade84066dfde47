{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f93860fc_daa40c99",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2024-03-14T22:34:40Z",
      "side": 1,
      "message": "WARNING: suspect code indent for conditional statements (16, 16)\n+\t\tif (c \u003d\u003d \u0027\\\"\u0027)\n+\t\tc \u003d *sp++; /* gobble leading \u0027\"\u0027 from regexp */",
      "revId": "b3f23b00d29fd7d80afc353738ade84066dfde47",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1ccdc2f_99e55aee",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1021499
      },
      "writtenOn": "2024-03-21T10:31:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f93860fc_daa40c99",
      "revId": "b3f23b00d29fd7d80afc353738ade84066dfde47",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfdac545_5cb551f0",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2024-03-14T22:34:40Z",
      "side": 1,
      "message": "WARNING: suspect code indent for conditional statements (16, 16)\n+\t\twhile (c !\u003d \u0027\\0\u0027) {\n+\t\tif (c \u003d\u003d \u0027\\\\\u0027) {",
      "revId": "b3f23b00d29fd7d80afc353738ade84066dfde47",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ed04cb6_5b02d492",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 1021499
      },
      "writtenOn": "2024-03-21T10:31:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bfdac545_5cb551f0",
      "revId": "b3f23b00d29fd7d80afc353738ade84066dfde47",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1068c8cb_10599ca3",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2024-03-14T22:34:40Z",
      "side": 1,
      "message": "WARNING: suspect code indent for conditional statements (16, 16)\n+\t\tif (c \u003d\u003d \u0027\\\\\u0027) {\n+\t\tc \u003d *sp++;",
      "revId": "b3f23b00d29fd7d80afc353738ade84066dfde47",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0ec1ce3_75f958a1",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1021499
      },
      "writtenOn": "2024-03-21T10:29:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1068c8cb_10599ca3",
      "revId": "b3f23b00d29fd7d80afc353738ade84066dfde47",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc079dfc_a52d8190",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2024-03-14T22:34:40Z",
      "side": 1,
      "message": "WARNING: suspect code indent for conditional statements (16, 16)\n+\t\t} else if (c \u003d\u003d \u0027\"\u0027 \u0026\u0026 *sp \u003d\u003d \u0027\\0\u0027)\n+\t\tbreak; /* skip trailing \u0027\"\u0027 from regexp */",
      "revId": "b3f23b00d29fd7d80afc353738ade84066dfde47",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aea182b3_574d0321",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1021499
      },
      "writtenOn": "2024-03-21T10:29:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc079dfc_a52d8190",
      "revId": "b3f23b00d29fd7d80afc353738ade84066dfde47",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f853785_ac4e269a",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1005370
      },
      "writtenOn": "2024-03-14T22:34:40Z",
      "side": 1,
      "message": "WARNING: suspect code indent for conditional statements (16, 20)\n+\t\tif (token[strlen(token) - 1] \u003d\u003d \u0027\\\u0027\u0027)\n+\t\t    token[strlen(token) - 1] \u003d \u0027\\0\u0027;",
      "revId": "b3f23b00d29fd7d80afc353738ade84066dfde47",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13125e7a_cede695f",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1021499
      },
      "writtenOn": "2024-03-21T10:31:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f853785_ac4e269a",
      "revId": "b3f23b00d29fd7d80afc353738ade84066dfde47",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d38a102_2c8a0fe7",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1008938
      },
      "writtenOn": "2024-03-15T06:20:01Z",
      "side": 1,
      "message": "I suppose the strlen comparison can be removed. Based on hash matching \u0026 strcmp, one can say the tokens are matching.",
      "revId": "b3f23b00d29fd7d80afc353738ade84066dfde47",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea926f38_54d0ee36",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1021499
      },
      "writtenOn": "2024-03-15T10:56:06Z",
      "side": 1,
      "message": "I deliberately opted for strlen() to minimize the usage of strcmp. Even though we use CityHash64, there\u0027s still a small chance that two paths could have the same hash.",
      "parentUuid": "6d38a102_2c8a0fe7",
      "revId": "b3f23b00d29fd7d80afc353738ade84066dfde47",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4fb05c25_d99841f3",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1021499
      },
      "writtenOn": "2024-03-15T10:56:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea926f38_54d0ee36",
      "revId": "b3f23b00d29fd7d80afc353738ade84066dfde47",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "838c46e3_8afb5d08",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-03-15T21:22:30Z",
      "side": 1,
      "message": "Oh, but how much more expensive than strcmp is strlen? They both scan the strings.",
      "parentUuid": "4fb05c25_d99841f3",
      "revId": "b3f23b00d29fd7d80afc353738ade84066dfde47",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98812f27_ca0e2c1c",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1003571
      },
      "writtenOn": "2024-03-19T00:34:58Z",
      "side": 1,
      "message": "Also, if you really do use strlen, use memcmp instead of strcmp if the length matches.\n\nBut note that strlen scans the entire string, strcmp only scans until first mismatch, so mismatches are usually cheap. Especially once you are only doing slightly more than 1 compare per token (the match, plus the rare additional compare due to hash collision).",
      "parentUuid": "838c46e3_8afb5d08",
      "revId": "b3f23b00d29fd7d80afc353738ade84066dfde47",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87b1d1db_f6fd1920",
        "filename": "src/config_parsing/analyse.c",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1021499
      },
      "writtenOn": "2024-03-21T10:28:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "98812f27_ca0e2c1c",
      "revId": "b3f23b00d29fd7d80afc353738ade84066dfde47",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}